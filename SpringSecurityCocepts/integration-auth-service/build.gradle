
buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.owasp:dependency-check-gradle:8.2.1"
		classpath("io.spring.javaformat:spring-javaformat-gradle-plugin:0.0.35")
	}
}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
	id "org.sonarqube" version "3.5.0.2730"
	id "jacoco"
	id "org.owasp.dependencycheck" version "8.2.1"
}

group = 'com.franconnect'
version = '0.0.1'
sourceCompatibility = '17'

apply plugin: 'io.spring.javaformat'
apply plugin: 'org.owasp.dependencycheck'
apply from: "gradle/plugins/dependency-check.gradle"

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}
jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	reports {
		xml.required = true
		csv.required = false
		html.destination file("${project.buildDir}/test-results")
	}
}
repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/plugins-release" }
	//maven { url "https://awsartifactrepository.com/release" }
}

ext {
	set('springCloudVersion', "2022.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	//implementation 'org.springframework.cloud:spring-cloud-starter-config'
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
	implementation 'javax.validation:validation-api:2.0.0.Final'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'javax.xml.bind:jaxb-api:2.3.0'

	implementation 'org.springframework.boot:spring-boot-starter-validation:2.4.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'io.vavr', name: 'vavr', version: '0.10.4'
	implementation 'com.github.rutledgepaulv:rest-query-engine:0.7.1'
	implementation 'com.google.code.gson:gson:2.8.6'

	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0'

	//Junit and mockito
	testImplementation group: 'junit', name: 'junit', version: '4.13.2'
	testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: '5.6.0'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.9.2'
	testImplementation group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.6'
	testImplementation group: 'org.mockito', name: 'mockito-inline', version: '3.3.3'

	//lombok
	implementation 'org.projectlombok:lombok:1.18.18'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	//devtool
	implementation 'org.springframework.boot:spring-boot-starter'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

task copyJarToDockerDir(type: Copy) {
	dependsOn(bootJar)
	into "src/main/docker/"
	from "${buildDir}/libs/${archivesBaseName}-${version}.jar"
}


build.dependsOn(copyJarToDockerDir)